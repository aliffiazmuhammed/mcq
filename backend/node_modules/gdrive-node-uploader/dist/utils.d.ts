import { FileStat } from './types';
import { Auth } from 'googleapis';
export declare const getAuthClient: (auth?: Auth.OAuth2Client) => Promise<Auth.OAuth2Client>;
export declare const getFileDownloadUrl: ({ drive, fileId }: {
    drive: any;
    fileId: string;
}) => Promise<any>;
export declare const makeFilePublic: ({ drive, fileId }: {
    drive: any;
    fileId: string;
}) => Promise<void>;
export declare const extractFileIdFromUrl: ({ fileUrl }: {
    fileUrl: string;
}) => string;
export declare const validateFileIdOrUrl: ({ fileId, fileUrl }: {
    fileId?: string;
    fileUrl?: string;
}) => string;
export declare const makeFolderPublic: ({ drive, folderId }: {
    drive: any;
    folderId: string;
}) => Promise<void>;
export declare const formatDate: (dateString: string) => string;
export declare function convertTodirectDownloadUrl(driveLink: string): string;
export declare const getFileStats: (drive: any, folderId: string, destinationPath: string) => Promise<FileStat[]>;
export declare const findExistingFileId: (drive: any, name: string, parentFolderId: string) => Promise<any>;
//# sourceMappingURL=utils.d.ts.map